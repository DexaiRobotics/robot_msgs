package robot_msgs;

struct stuffgetter_plan_t
{
  int64_t utime; // total time for the plan
  string robot_type;
  string utensil; 
  string material;
  string container;   
  
  // A StuffGetter plan is divided into approach, get_stuff, finish, and dispense phases
  // We store the key points to generate the trajectory and the full plans
  
  // Approach waypoint is reached via RRT
  bot_core.robot_state_t approach; 
  // approach_plan links approach <----> get_stuff[0]
  int32_t num_approach_plan_states;
  bot_core.robot_state_t approach_plan[num_approach_plan_states];

  // GetStuff Plan encodes the interaction with the material 
  int32_t num_get_stuff_states;
  bot_core.robot_state_t get_stuff[num_get_stuff_states];
  int32_t num_get_stuff_plan_states;
  bot_core.robot_state_t get_stuff_plan[num_get_stuff_plan_states];

  // finish is a ready state before dispensing
  bot_core.robot_state_t finish;
  int32_t num_finish_plan_states;
  bot_core.robot_state_t finish_plan[num_finish_plan_states];

  // dispense links finish <----> dispense_point and dispenses
  int32_t num_dispense_states; 
  bot_core.robot_state_t dispense[num_dispense_states];
  int32_t num_dispense_plan_states; 
  bot_core.robot_state_t dispense_plan[num_dispense_plan_states];

  // attach_tool[0] is reached via RRT from last point 
  int32_t num_attach_tool_states; 
  bot_core.robot_state_t attach_tool[num_attach_tool_states];
  int32_t num_attach_tool_plan_states; 
  bot_core.robot_state_t attach_tool_plan[num_attach_tool_plan_states];

  // remove_tool[0] is reached via RRT from dispense 
  int32_t num_remove_tool_states; 
  bot_core.robot_state_t remove_tool[num_remove_tool_states];
  int32_t num_remove_tool_plan_states; 
  bot_core.robot_state_t remove_tool_plan[num_remove_tool_plan_states];

   
  //information for the controller. Flexibility to do mixed pos/impedance control
  int8_t arm_control_type; 
  // see constants below  
  const int8_t NONE=0;
  const int8_t POSITION=1;
  const int8_t IMPEDANCE=2;
  const int8_t STIFF=3;
  const int8_t COMPLIANT=4;
}

